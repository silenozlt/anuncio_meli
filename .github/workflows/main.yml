name: Docker CI/CD for Mercado Livre Script

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 1 * * *'

env:
  DOCKER_IMAGE_NAME: ml-product-sync
  DOCKER_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    env:
      CLIENT_ID: ${{ secrets.ML_CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.ML_CLIENT_SECRET }}
      REFRESH_TOKEN: ${{ secrets.ML_REFRESH_TOKEN }}
      SELLER_ID: ${{ secrets.ML_SELLER_ID }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_NAME: ${{ secrets.DB_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short
            type=ref,event=branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Verify pushed image (optional)
        run: |
          echo "Imagem Docker constru√≠da e enviada com sucesso para:"
          echo "${{ steps.meta.outputs.tags }}"

  run_scheduled_script:
    runs-on: ubuntu-latest
    needs: build_and_push
    if: github.event_name == 'schedule'

    permissions:
      contents: read
      packages: read

    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Dockerized Script
        run: |
          docker pull ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          docker run --rm \
            -e CLIENT_ID="${{ secrets.ML_CLIENT_ID }}" \
            -e CLIENT_SECRET="${{ secrets.ML_CLIENT_SECRET }}" \
            -e REFRESH_TOKEN="${{ secrets.ML_REFRESH_TOKEN }}" \
            -e SELLER_ID="${{ secrets.ML_SELLER_ID }}" \
            -e DB_HOST="${{ secrets.DB_HOST }}" \
            -e DB_USER="${{ secrets.DB_USER }}" \
            -e DB_PASS="${{ secrets.DB_PASS }}" \
            -e DB_NAME="${{ secrets.DB_NAME }}" \
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest

